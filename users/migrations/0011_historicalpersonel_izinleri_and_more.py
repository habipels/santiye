# Generated by Django 4.2.13 on 2024-06-25 00:01

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0010_customuser_adrrsi'),
    ]

    operations = [
        migrations.CreateModel(
            name='Historicalpersonel_izinleri',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('kasa_virman_izni', models.BooleanField(default=False, verbose_name='Kasa Virman Yapma İzni')),
                ('kasa_olusturma_izni', models.BooleanField(default=False, verbose_name='Kasa Oluştuma İzni')),
                ('Kasa_silme_izni', models.BooleanField(default=False, verbose_name='Cari Silme İzni')),
                ('cari_olusturma', models.BooleanField(default=False, verbose_name='Cari Oluşturma İzni')),
                ('cari_silme_izni', models.BooleanField(default=False, verbose_name='Cari Silme İzni')),
                ('gelir_etiketi_olusturma', models.BooleanField(default=False, verbose_name='Gelir Etiketi Oluştuma İzni')),
                ('gelir_etiketi_silme', models.BooleanField(default=False, verbose_name='Gelir Etiketi Silme İzni ')),
                ('gider_etiketi_olusturma', models.BooleanField(default=False, verbose_name='Gider Etiketi Oluştuma İzni')),
                ('gider_etiketi_silme', models.BooleanField(default=False, verbose_name='Gider Etiketi Silme İzni ')),
                ('gider_kategorisi_olusturma', models.BooleanField(default=False, verbose_name='Gider Kategorisi Oluştuma İzni')),
                ('gider_kategorisi_silme', models.BooleanField(default=False, verbose_name='Gider Kategorisi Silme İzni ')),
                ('gelir_kategorisi_olusturma', models.BooleanField(default=False, verbose_name='Gelir Kategorisi Oluştuma İzni')),
                ('gelir_kategorisi_silme', models.BooleanField(default=False, verbose_name='Gelir Kategorisi Silme İzni ')),
                ('urun_olusturma', models.BooleanField(default=False, verbose_name='Ürün Oluştuma İzni')),
                ('urun_silme', models.BooleanField(default=False, verbose_name='Ürün Silme İzni ')),
                ('gelir_faturasi_kesme_izni', models.BooleanField(default=False, verbose_name='Geli Faturası Kesme İzni ')),
                ('gelir_faturasi_silme_izni', models.BooleanField(default=False, verbose_name='Geli Faturası Silme İzni ')),
                ('gelir_faturasi_duzenleme_izni', models.BooleanField(default=False, verbose_name='Geli Faturası Düzenleme İzni ')),
                ('gider_faturasi_kesme_izni', models.BooleanField(default=False, verbose_name='Geli Faturası Kesme İzni ')),
                ('gider_faturasi_silme_izni', models.BooleanField(default=False, verbose_name='Geli Faturası Silme İzni ')),
                ('gider_faturasi_duzenleme_izni', models.BooleanField(default=False, verbose_name='Geli Faturası Düzenleme İzni ')),
                ('gider_faturasi_makbuz_kesme_izni', models.BooleanField(default=False, verbose_name='Geli Faturası Makbuz Kesme İzni ')),
                ('gider_faturasi_makbuz_silme_izni', models.BooleanField(default=False, verbose_name='Geli Faturası Makbuz Silme İzni ')),
                ('gider_faturasi_makbuz_duzenleme_izni', models.BooleanField(default=False, verbose_name='Geli Faturası Makbuz Düzenleme İzni ')),
                ('gelir_faturasi_makbuz_kesme_izni', models.BooleanField(default=False, verbose_name='Geli Faturası Makbuz Kesme İzni ')),
                ('gelir_faturasi_makbuz_silme_izni', models.BooleanField(default=False, verbose_name='Geli Faturası Makbuz Silme İzni ')),
                ('gelir_faturasi_makbuz_duzenleme_izni', models.BooleanField(default=False, verbose_name='Geli Faturası Makbuz Düzenleme İzni ')),
                ('proje_tipi_olusturma', models.BooleanField(default=False, verbose_name='Proje Tipi Oluştuma  İzni')),
                ('proje_tipi_silme', models.BooleanField(default=False, verbose_name='Proje Tipi Silme İzni ')),
                ('santiye_olusturma', models.BooleanField(default=False, verbose_name='Şantiye Oluşturma İzni')),
                ('santiye_silme', models.BooleanField(default=False, verbose_name='Şantiye Silme İzni ')),
                ('santiye_kategoriler_olusturma', models.BooleanField(default=False, verbose_name='Şantiye Kategorileri Oluşturma İzni')),
                ('santiye_kategoriler_silme', models.BooleanField(default=False, verbose_name='Şantiye Kategorileri Silme İzni ')),
                ('sozlesmeler_olusturma', models.BooleanField(default=False, verbose_name='Sözleşmeler Oluşturma İzni')),
                ('sozlesmeler_silme', models.BooleanField(default=False, verbose_name='Sözleşmeler Silme İzni ')),
                ('hakedisler_olusturma', models.BooleanField(default=False, verbose_name='Hakedişler Oluşturma İzni')),
                ('hakedisler_silme', models.BooleanField(default=False, verbose_name='Hakedişler Silme İzni ')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('izinlerin_sahibi_kullanici', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı Bilgisi')),
            ],
            options={
                'verbose_name': 'historical personel_izinleri',
                'verbose_name_plural': 'historical personel_izinleris',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Historicalpersonel_dosyalari',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('dosyalari', models.TextField(blank=True, max_length=100, null=True, verbose_name='Kullanıcı Dosyası')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('kullanici', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı Bilgisi')),
            ],
            options={
                'verbose_name': 'historical personel_dosyalari',
                'verbose_name_plural': 'historical personel_dosyalaris',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLockScreenStatus',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_locked', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical lock screen status',
                'verbose_name_plural': 'historical lock screen statuss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCustomUser',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('status', models.CharField(choices=[('sirket', 'sirket'), ('sirketcalisani', 'sirketcalisani'), ('moderator', 'moderator')], default='sirket', max_length=100)),
                ('description', models.TextField(blank=True, default='', max_length=600, verbose_name='Açıklama')),
                ('kullanici_silme_bilgisi', models.BooleanField(default=False)),
                ('image', models.TextField(blank=True, max_length=100, null=True, verbose_name='Profile')),
                ('background_image', models.TextField(blank=True, max_length=100, null=True, verbose_name='background')),
                ('telefon_numarasi', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefon Numarası ')),
                ('gorevi', models.CharField(blank=True, max_length=250, null=True, verbose_name='Görevi')),
                ('adrrsi', models.TextField(blank=True, default='', max_length=600, verbose_name='Adres')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('kullanicilar_db', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user',
                'verbose_name_plural': 'historical users',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
